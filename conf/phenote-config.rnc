default namespace = "phenote/config/xml"
##default namespace = "http://phenote/config/xml"

##    attribute version { xsd:float }, -- cant do float 1.0.3 is not a float
start =
  element phenote-configuration {
    attribute version { xsd:string },
    attribute description { xsd:string },
    attribute name { xsd:string },
    attribute author { xsd:string },
    master-to-local-config,
    log,
    queryable-dataadapter*,
    dataadapter*,
    uvic-graph,
    term-history,
    auto-update-ontologies,
    update-timer,
    obo-repository,
    field*
  }

## specify how the master config interacts with local/cached config
## WIPEOUT master will always wipe out local every run
## UPDATE (default) update/merge master with local
## when is ALWAYS,ON_VERSION_CHANGE,INIT
master-to-local-config = element master-to-local-config {
  attribute mode { xsd:string },
  attribute when { xsd:string },
  attribute overriding-master-url { xsd:string }
}

queryable-dataadapter = element queryable-dataadapter {
  ## actual class name, eg phenote.dataadapter.worm.WormAdapter
  attribute name { xsd:string },
  attribute enable { xsd:boolean }
} 


## rename/add file-dataadapter - keep dataadapter for backward compatibility?
dataadapter =
  element dataadapter {
    ## for now just 2 dataadapters, phenoxml & phenosyntax (and now also nexus)
    ## take out this constraint - make more pluggable easy to add DA
    ##attribute name {"phenoxml" | "phenosyntax" | "nexus"}
    ## actual class name phenote.dataadapter.phenoxml.PhenoXmlAdapter
    attribute name { xsd:string },
    attribute enable { xsd:boolean }
  }


## Where the config file for log4j is
log =
  element log {
    attribute config-file { xsd:string }
  }

uvic-graph = element uvic-graph { attribute enable { xsd:boolean } }

term-history = element term-history { attribute enable { xsd:boolean } }

auto-update-ontologies = element auto-update-ontologies { attribute enable { xsd:boolean } }

update-timer = element update-timer { attribute timer {xsd:integer} }

obo-repository = element obo-repository { attribute url-dir {xsd:string} }

field = 
  element field {
    attribute enable { xsd:boolean },
    ##attribute name { "Pub" | "Genotype" | "Genetic Context" | "Entity" | "Quality" },
    attribute name { xsd:string },
    attribute desc { xsd:string },
    ## tag for field for pheno-syntax adapter
    attribute syntax-abbrev { xsd:string },
    ## whether field is free text or constrained by ontology - take out?
    ## this is actually unnecasary - if there is no file free text is assumed    
    attribute type { "free_text" | "ontology" },  
    ## file is for single ontology - rename ontology_file?
    ## phase these 4 out - redundant with single ontology
    attribute tab { xsd:string },
    attribute file { xsd:string },
    attribute filter-out { xsd:string },
    attribute slim { xsd:string },
    attribute repos-subdir {xsd:string},
    postcomp?,
    ontology*
  } 

ontology =
  element ontology {
    attribute name { xsd:string },
    ## obo file for ontology
    attribute file { xsd:string },
    attribute namespace { xsd:string },
    attribute filter-out { xsd:string },
    attribute slim { xsd:string },
    attribute repos-subdir {xsd:string},
    attribute is-postcomp-rel {xsd:boolean}
  }

## Whether to check if ontology(obo) has been updated/more current obo file
## I think this needs to be taken out as replaced by quartz scheduler
##check-for-new-ontologies =
##  element check-for-new-ontologies {
##    attribute intervalMinutes { xsd:integer } }

## hmmmmm - this is funny - is there a need for more than one rel ontol??
## alternatively should this just hold ontology+(1 or more)
## or alternatively just be another ontology with isRel flag and if theres
## an ontology with isRel flag then do post comp (could also have redundant
## isPostComp flag) hmmmm - cleaner but not as intuitive
## isRelForPostComp - more explicit as there may be rels for stage as well
postcomp =
  element postcomp {
    attribute relationship-ontology { xsd:string },
    ## do we need this??
    ontology*
  }

