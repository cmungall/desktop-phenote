<?xml version="1.0"?>
<!-- ====================================================================== 
     ant build file
     ====================================================================== -->

<project name="phenote" default="compile" basedir=".">

  <description>phenote ant build</description>

  <!-- property name="src-svn" value="./src/java" / -->
  <property name="src" value="./src/java" />
  <property name="test" value="./src/java/test" />
  <!-- where classes go -->  
  <property name="classfiles" value="classfiles" />
  <property name="web-classfiles" value="web-classfiles" />
  <property name="lib" value="jars" />
  <property name="jarfile" value="jars/phenote.jar"/>
  <property name="obo" value="obo-files" />
  <property name="conf" value="conf" />

  <!-- The init target makes sure that the prerequisite directories exist. -->
  <target name="init">
    <mkdir dir="${classfiles}" />
  </target>


  <!-- The classpath includes all the jar files jars dir, excluding
       jars/phenote.jar if it exists. -->
  <path id="project.classpath">
    <fileset dir="${lib}">
      <include name="*.jar"/>
      <exclude name="phenote.jar"/>
    </fileset>
  </path>

  <path id="project.classpath2">
    <fileset dir="${lib}">
      <exclude name="phenote.jar"/>
      <exclude name="META-INF"/>
    </fileset>
  </path>
  <path id="project.classpath3">
    <fileset dir="${lib}">
      <patternset id="non-phenote-jars">
        <include name="**/*.jar"/>
        <exclude name="**/phenote.jar"/>
      </patternset>
    </fileset>
  </path>

  <!-- The compile target runs javac on all the java files, and saves
        them into  the classfiles directory. -->
  <target name="compile" depends="init">
    <javac srcdir="${src}" destdir="${classfiles}" debug="yes">
      <classpath refid="project.classpath3"/>
    </javac>
  </target>

  <target name="compile-servlet">
    <javac srcdir="${src}" destdir="${web-classfiles}" debug="yes">
      <classpath refid="project.classpath3"/>
    </javac>
  </target>

  <!-- runs off classfiles not jar, todo: run-jar -->
  <target name="run" depends="compile">
     <java classname="phenote.gui.Phenote" fork="yes" jvmargs="-Xmx200M">
         <!-- arg value="-c configfilehereventually"/ -->
        <classpath>
          <pathelement path="${classfiles}"/>
          <fileset dir="${lib}">
             <include name="*.jar"/>
             <exclude name="phenote.jar"/>
          </fileset>
        </classpath>
     </java>
   </target>

  <target name="test" depends="build-test">
     <java classname="org.junit.runner.JUnitCore" fork="yes">
         <arg value="phenote.gui.TestPhenote"/>
        <classpath>
          <pathelement path="${classfiles}"/>
          <fileset dir="${lib}">
             <include name="*.jar"/>
             <exclude name="phenote.jar"/>
          </fileset>
        </classpath>
     </java>
   </target>

  <!-- The clean target just erases the classes -->
  <target name="clean">
    <delete dir="${classfiles}"/>
  </target>

  <!-- clean and compile everything -->
  <target name="build-all" depends="clean,compile,build-test"/>


  <target name="build-test" depends="compile">
    <javac srcdir="${test}" destdir="${classfiles}" debug="yes">
      <classpath refid="project.classpath"/> 
    </javac>  
  </target>

  <!-- JAR The jar target compiles everything, and produces a phenote.jar in
       phenote/jars/phenote.jar.  -->
  <target name="jar" depends="compile">
     <jar destfile="${jarfile}">
        <fileset dir="${classfiles}"/>
	<fileset file="${obo}/*.obo"/>
        <fileset file="${conf}/*.cfg"/>
     </jar>
  </target>

<!-- file=${obo}/*.obo -->


  <target name="javadoc">
   <javadoc
           destdir="doc/api"
           author="true"
           version="true"
           use="true"
           windowtitle="Phenote API"
           package="true">

    <!-- this aint pickin everything up??? -->
    <packageset dir="${src}" defaultexcludes="no">
      <include name="phenote/*/**"/>
      <!-- exclude name="com/dummy/test/doc-files/**"/ -->
    </packageset>

    <classpath refid="project.classpath"/> 

    <doctitle><![CDATA[<h1>Phenote</h1>]]></doctitle>
   </javadoc>
  </target>

  <property name="dist" value="0.5"/>

  <target name="tar">
    <mkdir dir="tars/${dist}"/>
    <tar destfile="tars/${dist}/phenote-${dist}.tar">
      <tarfileset dir =".">
            <exclude name="${dist}/**"/>
            <exclude name="svn-phenote/**"/>
            <exclude name="tars/**"/>
            <exclude name="source/obo-files/**"/>
            <exclude name="src/obo-files/**"/>
            <exclude name="*.tar"/>
            <exclude name="*.jar"/>
            <exclude name="garbage/**"/>
            <exclude name="oldjars/**"/>
            <exclude name="source/**"/>
      </tarfileset>
    </tar>
    <gzip zipfile="tars/${dist}/phenote-${dist}.tar.gz" src="tars/${dist}/phenote-${dist}.tar"/>
  </target>

  <target name="tar-source">
    <mkdir dir="tars/${dist}"/>
    <tar destfile="tars/${dist}/phenote-${dist}-src.tar">
      <tarfileset dir =".">
            <exclude name="${dist}/**"/>
            <exclude name="svn-phenote/**"/>
            <exclude name="tars/**"/>
            <exclude name="source/obo-files/**"/>
            <exclude name="src/obo-files/**"/>
            <!-- for now take out go as its 8.5M & not being used yet -->
            <exclude name="obo-files/gene_ontology.obo"/>
            <exclude name="*.tar"/>
            <exclude name="*.jar"/>
            <exclude name="garbage/**"/>
            <exclude name="oldjars/**"/>
            <exclude name="jars/phenote.jar"/>
            <exclude name="source/**"/>
            <exclude name="doc/**"/>
            <exclude name="classfiles/**"/>
      </tarfileset>
    </tar>
    <gzip zipfile="tars/${dist}/phenote-${dist}-src.tar.gz" src="tars/${dist}/phenote-${dist}-src.tar"/>
  </target>

  <target name="gzip-tar">
    <gzip zipfile="tars/${dist}/phenote-${dist}.tar.gz" src="tars/${dist}/phenote-${dist}.tar"/>
  </target>

</project>


