<?xml version="1.0"?>
<!-- ====================================================================== 
     ant build file
     ====================================================================== -->

<!-- environment variable $PHENOTE_WEB_CONF_FILES need to be set to -->
<!-- where cfg & obo files go on the web deployment for web-deployment -->
<!-- to work, $PHENOTE_WEB_CLASSFILES for classfile deployment -->

<project name="phenote" default="compile" basedir=".">
	
    <!-- for antcontrib for if - hafta set CLASSPATH to /usr/share/ant/lib/ant-contrib-1.0b3.jar-->
    <!-- taskdef resource="net/sf/antcontrib/antcontrib.properties"/ -->
    <description>phenote ant build</description>
    <!-- allows for use of environment vars -->
    <property environment="env"/>
    <!-- property name="src-svn" value="./src/java" / -->
    <property name="src" value="./src/java"/>
    <property name="test" value="./test/java"/>
    <!-- where classes go -->
    <property name="classfiles" value="classfiles"/>
    <property name="web-classfiles" value="${env.PHENOTE_WEB_CLASSFILES}"/>
    <property name="web-conf" value="${env.PHENOTE_WEB_CONF_FILES}"/>
    <property name="web-html" value="${env.PHENOTE_WEB_HTML}"/>
    <property name="web-jars" value="${env.PHENOTE_WEB_JAR_DIR}"/>
    <property name="web.xml-dir" value="${env.PHENOTE_WEB_XML_DIR}"/>
    <property name="data_transfer" value="src/web/WEB-INF/data_transfer"/>

    <property name="lib" value="jars"/>
    <property name="jarfile" value="jars/phenote.jar"/>
	<property name="nativelibs-jarname" value="phenote-nativelibs.jar"/>
    <property name="obo" value="obo-files"/>
    <property name="conf" value="conf"/>
    <property name="images" value="images"/>
	<property name="dist" value="dist"/>
	<property name="build-lib" value="build-lib"/>
	
	<property name="main-class" value="phenote.main.Phenote2"/>
	<tstamp>
		<format property="NOW" pattern="yyyy-MM-dd_HH:mm:ss"/>
	</tstamp>
	<property name="phenote.version" value="setVersionWith-Dphenote.version=x.y-betaz"/>
	<property name="phenote.build" value="${NOW}"/>

    <!-- override this from command line with  -DCONF-FILE=initial-zfin.cfg -->
    <property name="CONF_FILE" value="initial-flybase.cfg"/>

	<!-- a fileset that picks all the resources in the Phenote src directory -->
	<fileset dir="${src}" id="resource_files">
		<include name="**/resources/**" />
	</fileset>
	
    <!-- The init target makes sure that the prerequisite directories exist. -->
    <target name="init" depends="src_resources">
        <mkdir dir="${classfiles}"/>
    </target>


    <!-- The classpath includes all the jar files jars dir, excluding
jars/phenote.jar if it exists. -->
    <path id="project.classpath">
        <fileset dir="${lib}">
            <include name="*.jar"/>
            <exclude name="phenote.jar"/>
        </fileset>
    </path>

    <path id="project.classpath2">
        <fileset dir="${lib}">
            <exclude name="phenote.jar"/>
            <exclude name="META-INF"/>
        </fileset>
    </path>

    <path id="project.classpath3">
        <fileset dir="${lib}">
            <patternset id="non-phenote-jars">
                <include name="**/*.jar"/>
                <exclude name="**/phenote.jar"/>
                <exclude name="test/**"/>
            </patternset>
        </fileset>
    </path>

    <!-- The compile target runs javac on all the java files, and saves
them into  the classfiles directory. excludes="test/**"  -->
    <target name="compile" depends="init">
        <javac srcdir="${src}" destdir="${classfiles}" debug="yes" excludes="test/**">
            <classpath refid="project.classpath3"/>
        </javac>
    </target>

    <!-- runs off classfiles not jar, todo: run-jar -->
    <target name="run" depends="compile">
        <java classname="phenote.main.Phenote" fork="yes">
        	<jvmarg value="-Xmx500M"/>
        	<jvmarg value="-Dphenote.version=${phenote.version}"/>
        	<jvmarg value="-Dphenote.build=${phenote.build}"/>
        	<jvmarg value="-Djava.library.path=${lib}"/>
            <!-- arg value="-c configfilehereventually"/ -->
            <classpath>
                <pathelement path="${classfiles}"/>
            	<!-- for log4j -->
            	<pathelement path="${conf}"/>
                <fileset dir="${lib}">
                    <include name="*.jar"/>
                    <exclude name="phenote.jar"/>
                </fileset>
            </classpath>
        </java>
    </target>
	
	<target name="src_resources">
		<copy todir="${classfiles}">
			<fileset refid="resource_files" />
		</copy>
	</target>

    <target name="zfin" depends="compile">
        <java classname="phenote.main.Phenote" fork="yes" jvmargs="-Xmx200M">
            <!-- arg value="-c configfilehereventually"/ -->
            <arg value="-c"/>
            <arg value="zfin-standalone.cfg"/>
            <classpath>
                <pathelement path="${classfiles}"/>
                <fileset dir="${lib}">
                    <include name="*.jar"/>
                    <exclude name="phenote.jar"/>
                </fileset>
            </classpath>
        </java>
    </target>

    <target name="fly" depends="compile">
        <java classname="phenote.main.Phenote" fork="yes" jvmargs="-Xmx200M">
            <!-- arg value="-c configfilehereventually"/ -->
            <arg value="-c"/>
            <arg value="initial-flybase.cfg"/>
            <classpath>
                <pathelement path="${classfiles}"/>
                <fileset dir="${lib}">
                    <include name="*.jar"/>
                    <exclude name="phenote.jar"/>
                </fileset>
            </classpath>
        </java>
    </target>

    <target name="obd" depends="compile">
        <java classname="phenote.main.Phenote" fork="yes" jvmargs="-Xmx200M">
            <!-- arg value="-c configfilehereventually"/ -->
            <arg value="-c"/>
            <arg value="obd.cfg"/>
            <classpath>
                <pathelement path="${classfiles}"/>
                <fileset dir="${lib}">
                    <include name="*.jar"/>
                    <exclude name="phenote.jar"/>
                </fileset>
            </classpath>
        </java>
    </target>
  <target name="run-jar" depends="jar">
     <java classname="phenote.main.Phenote" fork="yes" jvmargs="-Xmx300M">
         <!-- arg value="-c configfilehereventually"/ -->
        <classpath>
          <fileset dir="${lib}">
             <include name="*.jar"/>
          </fileset>
        </classpath>
     </java>
  </target>

    <target name="run-conf" depends="compile">
        <java classname="phenote.main.Phenote" fork="yes" jvmargs="-Xmx200M">
            <!-- arg value="-c configfilehereventually"/ -->
            <arg value="-c"/>
    <!-- from command line with  -DCONF-FILE=initial-zfin.cfg -->
            <arg value="${CONF_FILE}"/>
            <classpath>
                <pathelement path="${classfiles}"/>
                <fileset dir="${lib}">
                    <include name="*.jar"/>
                    <exclude name="phenote.jar"/>
                </fileset>
            </classpath>
        </java>
    </target>

  <!-- terse FAIL or PASS -->
	<target name="test" depends="build-test" description="Unit tests">
		<junit fork="yes" printsummary="on" maxmemory="1024m">
			<classpath>
                <pathelement path="${classfiles}"/>
                <fileset dir="${lib}">
                    <include name="*.jar"/>
                    <exclude name="phenote.jar"/>
                </fileset>
            </classpath>
			<batchtest>
				<fileset dir="${test}"/>
			</batchtest>
		</junit>
	</target>

  <!-- prints to stdout all messages -->
	<target name="verbose-test" depends="build-test" description="Unit tests">
		<junit fork="yes" printsummary="withOutAndErr" maxmemory="1024m">
			<classpath>
                <pathelement path="${classfiles}"/>
                <fileset dir="${lib}">
                    <include name="*.jar"/>
                    <exclude name="phenote.jar"/>
                </fileset>
            </classpath>
			<batchtest>
				<fileset dir="${test}"/>
			</batchtest>
		</junit>
	</target>
	
  <!-- set var junit.test.class.name from cmd line for example:
 ant runatest -Djunit.test.class.name="phenote.servlet.ControllerTest"-->
	<target name="runatest" depends="build-test">
		<junit fork="yes" printsummary="withOutAndErr" maxmemory="1024m"
     showoutput="true">
			<classpath>
                <pathelement path="${classfiles}"/>
                <fileset dir="${lib}">
                    <include name="*.jar"/>
                    <exclude name="phenote.jar"/>
                </fileset>
            </classpath>
			<test name="${junit.test.class.name}"/>
		</junit>
 	</target>

    <!-- The clean target just erases the classes -->
    <target name="clean">
        <delete dir="${classfiles}"/>
    	<delete dir="${dist}"/>
    </target>

    <!-- clean and compile everything -->
    <target name="build-all" depends="clean,compile,build-test"/>

    <target name="build-test" depends="compile">
        <javac srcdir="${test}" destdir="${classfiles}" debug="yes">
            <classpath refid="project.classpath"/>
        </javac>
    </target>

    <target name="jar-pase" depends="compile">
        <jar destfile="${jarfile}">
            <fileset dir="${classfiles}"/>
            <fileset file="${obo}/*.obo"/>
            <fileset file="${conf}/*.cfg"/>
	    <fileset dir="${images}/*"/>
        </jar>
    </target>

    <!-- JAR The jar target compiles everything, and produces a phenote.jar in
  phenote/jars/phenote.jar.  -->
    <target name="jar" depends="compile">
        <!-- copy file="doc/phenote-website/help/Phenote.hs" todir="conf" ?? -->
        <jar destfile="${jarfile}">
            <fileset dir="${classfiles}"/>
            <fileset dir="." includes="obo-files/" excludes="obo-files/old"/>
            <fileset file="${conf}/*.cfg"/>
        	<fileset file="${conf}/log4j.xml"/>
	    <fileset dir="." includes="${conf}/*.xml"/>
	    <fileset dir="." includes="images/"/>
            <fileset dir="doc/phenote-website" includes="help/**"/>
        </jar>
    </target>

    <!-- JAR The jar target compiles everything, and produces a phenote.jar in
  phenote/jars/phenote.jar.  -->
    <target name="jar-reduced" depends="compile">
        <jar destfile="${jarfile}">
            <fileset dir="${classfiles}"/>
            <fileset dir="." includes="obo-files/" excludes="obo-files/old,obo-files/fma_obo.obo,obo-files/gene_ontology.obo,obo-files/chebi.obo" />
            <fileset file="${conf}/*.cfg"/>
	    <fileset dir="." includes="images/"/>
        </jar>
    </target>

    <target name="jar-web" depends="compile">
        <jar destfile="${jarfile}">
            <fileset dir="${classfiles}"/>
            <fileset file="${conf}/*.cfg"/>
        </jar>
    </target>

    <!-- file=${obo}/*.obo -->


    <target name="javadoc">
        <javadoc
                destdir="doc/api"
                author="true"
                version="true"
                use="true"
                windowtitle="Phenote API"
                package="true">

            <!-- this aint pickin everything up??? -->
            <packageset dir="${src}" defaultexcludes="no">
                <include name="phenote/*/**"/>
                <!-- exclude name="com/dummy/test/doc-files/**"/ -->
            </packageset>

            <classpath refid="project.classpath"/>

            <doctitle><![CDATA[<h1>Phenote</h1>]]></doctitle>
        </javadoc>
    </target>

    <property name="dist" value="0.6"/>

    <target name="tar">
        <mkdir dir="tars/${dist}"/>
        <tar destfile="tars/${dist}/phenote-${dist}.tar">
            <tarfileset dir=".">
                <exclude name="${dist}/**"/>
                <exclude name="svn-phenote/**"/>
                <exclude name="tars/**"/>
                <exclude name="src/obo-files/**"/>
                <exclude name="*.tar"/>
                <exclude name="*.jar"/>
                <exclude name="garbage/**"/>
                <exclude name="oldjars/**"/>
                <exclude name="src/java/**"/>
                <exclude name="web-classfiles/**"/>
                <exclude name="web-interface/**"/>
                <exclude name="web-deployment/**"/>
            </tarfileset>
        </tar>
        <gzip zipfile="tars/${dist}/phenote-${dist}.tar.gz" src="tars/${dist}/phenote-${dist}.tar"/>
    </target>

    <target name="tar-source">
        <mkdir dir="tars/${dist}"/>
        <tar destfile="tars/${dist}/phenote-${dist}-src.tar">
            <tarfileset dir=".">
                <exclude name="${dist}/**"/>
                <exclude name="svn-phenote/**"/>
                <exclude name="tars/**"/>
                <exclude name="src/obo-files/**"/>
                <!-- for now take out go as its 8.5M & not being used yet -->
                <exclude name="obo-files/gene_ontology.obo"/>
                <exclude name="*.tar"/>
                <exclude name="*.jar"/>
                <exclude name="garbage/**"/>
                <exclude name="oldjars/**"/>
                <!-- exclude name="jars/phenote.jar"/ -->
                <exclude name="doc/**"/>
                <exclude name="classfiles/**"/>
                <exclude name="web-classfiles/**"/>
                <exclude name="web-interface/**"/>
                <exclude name="web-deployment/**"/>
            </tarfileset>
        </tar>
        <gzip zipfile="tars/${dist}/phenote-${dist}-src.tar.gz" src="tars/${dist}/phenote-${dist}-src.tar"/>
    </target>

    <target name="gzip-tar">
        <gzip zipfile="tars/${dist}/phenote-${dist}.tar.gz" src="tars/${dist}/phenote-${dist}.tar"/>
    </target>

    <target name="compile-servlet">
        <javac srcdir="${src}" destdir="${web-classfiles}" debug="yes" excludes="test/**">
            <classpath refid="project.classpath3"/>
        </javac>
    </target>

    <!-- web-deployment & web-config-files  should be a symoblic link to ones web site -->
    <target name="web-deployment" depends="compile-servlet">
        <copy todir="${web-html}">
            <fileset dir="src/web"/>
        </copy>
        <copy todir="${web-conf}">
            <fileset dir="conf">
                <include name="*.cfg"/>
            </fileset>
        </copy>
        <copy todir="${web-conf}">
            <fileset dir="obo-files"/>
        </copy>
        <copy todir="${web-jars}">
            <fileset dir="${lib}">
                <include name="*.jar"/>
                <exclude name="phenote.jar"/>
            </fileset>
        </copy>
        <copy todir="${web.xml-dir}">
            <fileset file="src/web/WEB-INF/web.xml"/>
            <fileset file="src/web/WEB-INF/phenote-servlet.xml"/>
        </copy>
    </target>

    <target name="war" depends="jar-web, war-clean">
        <mkdir dir="war-deployment"/>
        <delete dir="${data_transfer}" />
        <mkdir dir="${data_transfer}" />
      <copy todir="${data_transfer}">
          <fileset file="${obo}/**" />
      </copy>

        <war destfile="war-deployment/phenote.war" webxml="src/web/WEB-INF/web.xml">
            <fileset dir="src/web">
                <exclude name="perl/*" />
            </fileset>
            <lib dir="${lib}">
                <exclude name="junit-4.0.jar" />
                <exclude name="BrowserLauncher2-10rc4.jar" />
                <exclude name="tomcat-servlet.jar" />
              <exclude name="jsp-api.jar" />
            </lib>
            <classes dir="${conf}" />
        </war>
    </target>

    <target name="war-fiddle" depends="jar">
        <war destfile="war-deployment/phenote-fiddle.war" webxml="src/web/WEB-INF/web-fiddle.xml">
            <fileset dir="src/web">
                <exclude name="perl/*" />
            </fileset>
            <lib dir="${lib}">
                <exclude name="junit-4.0.jar" />
                <exclude name="BrowserLauncher2-10rc4.jar" />
                <exclude name="tomcat-servlet.jar" />
            </lib>
            <classes dir="${obo}" />
            <classes dir="${conf}" />
	    <classes dir="${images}" />
        </war>
    </target>

    <target name="war-clean">
        <delete dir="war-deployment"/>
    </target>

    <target name="war-no-jar-depend">
        <delete file="war-deployment/phenote.war"/>
        <war destfile="war-deployment/phenote.war" webxml="src/web/WEB-INF/web.xml">
            <fileset dir="src/web"/>
            <lib dir="${lib}"/>
            <classes dir="${classfiles}"/>
            <zipfileset dir="${obo}"/>
            <!-- prefix="obo-files"/ ??? -->
            <zipfileset dir="${conf}"/>
        </war>
    </target>

    <taskdef name="xmlbean" classname="org.apache.xmlbeans.impl.tool.XMLBean" classpath="${lib}/xbean.jar"/>

    <!-- classgendir="${build.dir}" - if not doing jar but classes, schema is directory
where xsd files are (conf) -->
    <target name="xml-beans">
        <xmlbean schema="${conf}" destfile="${lib}/phenotexmlbeans.jar" classpath="${project.classpath3}"
                 failonerror="true" javasource="1.5">
        </xmlbean>
    </target>

<!-- todo do all jars not just phenote - take out -signed -->
<!-- depends on sym link phenote-webstart -->
    <!--target name="build-webstart" depends="build-sign-jars,webstart"/-->
    <target name="build-webstart" depends="build-all,jar,webstart"/>

    <!-- target name="build-sign-jars" depends="build-all,jar,sign-jars"/ -->




    <target name="sign-jars-svn-jar-dir-take-this-out-perhaps">
       <signjar keystore="plumpkey" alias="signFiles"
                storepass="plumper" keypass="plumper">
         <fileset dir="${lib}">
            <include name="*.jar"/>
         </fileset>
       </signjar>
    </target>

    
    <target name="webstart" depends="echo-phenote-version,webstart-jars,webstart-webpages,copy-jnlps"/>
    <target name="webstart-jars"
            depends="build-all,jar,copy-webstart-jars,sign-webstart-jars"/> 

    <target name="copy-webstart-jars">
      <mkdir dir="phenote-webstart/${phenote.version}"/>
      <copy todir="phenote-webstart/${phenote.version}/jars">
        <fileset file="${lib}/*.jar"/>
      </copy>
      <jar destfile="phenote-webstart/${phenote.version}/jars/${nativelibs-jarname}">
      	<fileset file="${lib}/*.jnilib"/>
      </jar>
    </target>

    <target name="sign-webstart-jars">
       <signjar keystore="plumpkey" alias="signFiles"
                storepass="plumper" keypass="plumper">
         <fileset dir="phenote-webstart/${phenote.version}/jars">
            <include name="*.jar"/>
         </fileset>
       </signjar>
    </target>   

    <target name="webstart-webpages">
      <copy todir="phenote-webstart">
         <!-- fileset file="doc/phenote-website/*.html"/ -->
         <fileset dir="doc/phenote-website" excludes="*.jnlp"/>
       </copy>
    </target>
    

    <target name="copy-jnlps" depends="copy-version-jnlps">
      <copy todir="phenote-webstart/latest">
        <fileset file="doc/phenote-website/*.jnlp"/>
      </copy>
      <replace dir="phenote-webstart/latest" token="@@phenote.version@@" value="${phenote.version}"/>
    </target>

    <target name="copy-version-jnlps">
      <copy todir="phenote-webstart/${phenote.version}">
        <fileset file="doc/phenote-website/*.jnlp"/>
      </copy>
      <replace dir="phenote-webstart/${phenote.version}" token="@@phenote.version@@" value="${phenote.version}"/>
    </target>    



    <target name="webstart-just-phenote-jar" depends="build-all,jar">
       <copy file="${lib}/phenote.jar"
             todir="phenote-webstart/${phenote.version}/jars"/>
       <signjar jar="phenote-webstart/${phenote.version}/jars/phenote.jar" keystore="plumpkey" alias="signFiles"
                storepass="plumper" keypass="plumper"/>
    </target>

    <!-- for quick test purposes - exclude big & slow human -->
    <target name="webstart-just-phenote-jar-reduced" depends="compile,jar-reduced">
       <copy file="${lib}/phenote.jar"
             todir="phenote-webstart/${phenote.version}/jars"/>
       <signjar jar="phenote-webstart/${phenote.version}/jars/phenote.jar" keystore="plumpkey" alias="signFiles"
                storepass="plumper" keypass="plumper"/>
    </target>

     <path id="jars-and-oboedit-classes">
        <fileset dir="${lib}">
            <patternset id="non-phenote-jars">
                <include name="**/*.jar"/>
                <exclude name="**/phenote.jar"/>
                <exclude name="test/**"/>
                <exclude name="**/oboedit.jar"/>
                <exclude name="**/org.geneontology.jar"/>
            </patternset>
        </fileset>
        <fileset dir="/srv/home/mgibson/phenote/go-dev/java/oboedit/classes"/>
    </path>

  <target name="compile-with-oboedit-classes" depends="init">
        <javac srcdir="${src}" destdir="${classfiles}" debug="yes" excludes="test/**">
            <classpath refid="jars-and-oboedit-classes"/>
        </javac>
    </target>
	
		
	<target name="dist-init">
		<mkdir dir="${dist}"/>
	</target>
	
	<taskdef name="jarbundler" classname="net.sourceforge.jarbundler.JarBundler" classpath="${build-lib}/jarbundler-1.9.jar"/>
	<!-- Create a competely self-contained double-clickable app bundle for Mac OS X in "dist/Phenote.app" -->
	<target name="dist-mac" depends="jar, dist-init">
		<jarbundler dir="${dist}" name="Phenote" mainclass="${main-class}" jvmversion="1.5*" vmoptions="-Xmx1024M -Dphenote.version=${phenote.version} -Dphenote.build=${phenote.build}" screenmenu="true" version="${phenote.version}" build="${phenote.build}">
			<jarfileset dir="${lib}"/>
		</jarbundler>
	</target>
	
	<!-- Create a double-clickable batch file for Windows in "dist/Phenote".  Jars are placed in a nested lib folder. -->
	<target name="dist-win" depends="jar, dist-init">
		<mkdir dir="${dist}/Phenote/lib"/>
		<copy todir="${dist}/Phenote" file="Phenote.bat"/>
		<replace file="${dist}/Phenote/Phenote.bat" token="@@phenote.version@@" value="${phenote.version}"/>
		<replace file="${dist}/Phenote/Phenote.bat" token="@@phenote.build@@" value="${phenote.build}"/>
		<copy todir="${dist}/Phenote/lib">
			<fileset dir="${lib}">
			</fileset>
		</copy>
		<path id="libclasses">
			<fileset dir="${dist}/Phenote/lib">
				<exclude name="phenote.jar"/>
			</fileset>
		</path>
		<manifestclasspath property="jar.classpath" jarfile="${dist}/Phenote/lib/phenote.jar">
			<classpath refid="libclasses"/>
		</manifestclasspath>
		<jar destfile="${dist}/Phenote/lib/phenote.jar" update="yes">
		    <manifest>
		    	<attribute name="Main-Class" value="${main-class}"/>
		       	<attribute name="Class-Path" value="${jar.classpath}"/>
			</manifest>
		</jar>
	</target>
	
	<target name="dist" depends="dist-mac, dist-win"/>


  <target name="echo-phenote-version">
    <echo message="${phenote.version}" />
  </target>

</project>


